name: mongo-sharding

services:
    router1:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: router1
      depends_on:
        - configSrv1_1
        - configSrv1_2
        - configSrv1_3
      restart: always
      networks:
        app-networkd-sharding:
      command:
        [
          "mongos",
          "--configdb",
          "config_server/configSrv1_1:27015,configSrv1_2:27016,configSrv1_3:27017", 
          "--bind_ip_all",
          "--port",
          "27020"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s

    configSrv1_1:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: configSrv1_1
      restart: always
      networks:
        app-networkd-sharding:
      volumes:
        - config_data_container1_1:/data/db
      command:
        [
          "--configsvr",
          "--replSet",
          "config_server",
          "--bind_ip_all",
          "--port",
          "27015"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s
    
    configSrv1_2:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: configSrv1_2
      restart: always
      networks:
        app-networkd-sharding:
      volumes:
        - config_data_container1_2:/data/db
      command:
        [
          "--configsvr",
          "--replSet",
          "config_server",
          "--bind_ip_all",
          "--port",
          "27016"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s
    
    configSrv1_3:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: configSrv1_3
      restart: always
      networks:
        app-networkd-sharding:
      volumes:
        - config_data_container1_3:/data/db
      command:
        [
          "--configsvr",
          "--replSet",
          "config_server",
          "--bind_ip_all",
          "--port",
          "27017"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s

    shard1_1:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: shard1_1
      restart: always
      networks:
        app-networkd-sharding:
      volumes:
        - shard1_data_container1_1:/data/db
      command:
        [
          "--shardsvr",
          "--replSet",
          "shard1",
          "--bind_ip_all",
          "--port",
          "27018"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s

    shard1_2:
      image: dh-mirror.gitverse.ru/mongo:latest
      container_name: shard1_2
      restart: always
      networks:
        app-networkd-sharding:
      volumes:
        - shard1_data_container1_2:/data/db
      command:
        [
          "--shardsvr",
          "--replSet",
          "shard2",
          "--bind_ip_all",
          "--port",
          "27019"
        ]
      healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s

    pymongo_api:
      container_name: pymongo_api_1
      build: 
        context: ../api_app
        dockerfile: ../api_app/Dockerfile
      image: kazhem/pymongo_api:1.0.0
      depends_on:
        - router1
      ports:
        - 8081:8080
      environment:
        MONGODB_URL: "mongodb://router1:27020"
        MONGODB_DATABASE_NAME: "somedb"
      networks:
        app-networkd-sharding:

networks:
  app-networkd-sharding:

volumes:
  config_data_container1_1:
  config_data_container1_2:
  config_data_container1_3:
  shard1_data_container1_1:
  shard1_data_container1_2:
